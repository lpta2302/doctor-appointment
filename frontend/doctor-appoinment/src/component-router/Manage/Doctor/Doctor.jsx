import React, { useState } from "react";
import "./Doctor.css";
import DoctorTag from "../Doctor/DocterTag/DoctorTag.jsx";

const initialDoctors = [
  { name: "Nguy·ªÖn VƒÉn A", birthYear: "1980", specialty: "Tim m·∫°ch" },
  { name: "Tr·∫ßn Th·ªã B", birthYear: "1985", specialty: "Nhi khoa" },
  { name: "Ph·∫°m VƒÉn C", birthYear: "1978", specialty: "Ch·∫•n th∆∞∆°ng ch·ªânh h√¨nh" },
  { name: "L√™ Th·ªã D", birthYear: "1990", specialty: "Da li·ªÖu" },
  { name: "Ho√†ng VƒÉn E", birthYear: "1975", specialty: "Ti√™u h√≥a" },
  { name: "ƒêinh Th·ªã F", birthYear: "1982", specialty: "N·ªôi ti·∫øt" },
  { name: "V≈© VƒÉn G", birthYear: "1988", specialty: "Th·∫ßn kinh" },
  { name: "B√πi Th·ªã H", birthYear: "1993", specialty: "Ph·ª• s·∫£n" },
  { name: "ƒêo√†n VƒÉn I", birthYear: "1981", specialty: "M·∫Øt" },
  { name: "Cao Th·ªã K", birthYear: "1995", specialty: "Tai - M≈©i - H·ªçng" },
];

const Doctor = () => {
  const [doctors, setDoctors] = useState(initialDoctors);
  const [form, setForm] = useState({ name: "", birthYear: "", specialty: "" });
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedIndex, setSelectedIndex] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  const handleSearch = (e) => {
    setSearchTerm(e.target.value.toLowerCase());
  };

  const handleAdd = () => {
    if (!form.name || !form.birthYear || !form.specialty) return;
    setDoctors([...doctors, form]);
    setForm({ name: "", birthYear: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleEdit = () => {
    if (selectedIndex === null) return;
    const updated = [...doctors];
    updated[selectedIndex] = form;
    setDoctors(updated);
    setForm({ name: "", birthYear: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleDelete = () => {
    if (selectedIndex === null) return;
    setDoctors(doctors.filter((_, idx) => idx !== selectedIndex));
    setForm({ name: "", birthYear: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleSelect = (index) => {
    setForm(doctors[index]);
    setSelectedIndex(index);
  };

  const filteredDoctors = doctors.filter((doc) =>
    doc.name.toLowerCase().includes(searchTerm)
  );

  return (
    <div className="doctor-container">
      {/* B√™n tr√°i ch·ª©a t√¨m ki·∫øm + form */}
      <div className="doctor-left">
        {/* √î t√¨m ki·∫øm */}
        <div className="search-container">
          <input
            type="text"
            placeholder="üîç T√¨m ki·∫øm b√°c sƒ©..."
            value={searchTerm}
            onChange={handleSearch}
            className="search-input"
          />
        </div>

        {/* ƒê∆∞·ªùng ph√¢n c√°ch */}
        <hr className="divider" />

        {/* Form nh·∫≠p b√°c sƒ© */}
        <div className="doctor-form">
          <h4>Th√¥ng tin b√°c sƒ©</h4>
          <input
            type="text"
            name="name"
            placeholder="T√™n b√°c sƒ©"
            value={form.name}
            onChange={handleChange}
          />
          <input
            type="number"
            name="birthYear"
            placeholder="NƒÉm sinh"
            value={form.birthYear}
            onChange={handleChange}
          />
          <input
            type="text"
            name="specialty"
            placeholder="Chuy√™n khoa"
            value={form.specialty}
            onChange={handleChange}
          />

          <div className="button-group">
            <button onClick={handleAdd} disabled={selectedIndex !== null}>
              Th√™m
            </button>
            <button onClick={handleEdit} disabled={selectedIndex === null}>
              S·ª≠a
            </button>
            <button onClick={handleDelete} disabled={selectedIndex === null}>
              X√≥a
            </button>
          </div>
        </div>
      </div>

      {/* B√™n ph·∫£i ch·ª©a danh s√°ch b√°c sƒ© */}
      <div className="doctor-list">
        <h4>Danh s√°ch b√°c sƒ©</h4>
        {filteredDoctors.map((doc, index) => (
          <DoctorTag
            key={index}
            doctor={doc}
            onSelect={() => handleSelect(index)}
            isSelected={selectedIndex === index}
          />
        ))}
      </div>
    </div>
  );
};

export default Doctor;
