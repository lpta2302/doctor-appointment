import React, { useState } from "react";
import "./Room.css";
import RoomListTag from "../Room/RoomListTag/RoomListTag.jsx";
import Footer from "../../../Footer/Footer.jsx";

// Fake data
const initialClinics = [
  { name: "Ph√≤ng kh√°m ƒêa khoa An B√¨nh", address: "123 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP.HCM", specialty: "ƒêa khoa" },
  { name: "Ph√≤ng kh√°m Nhi ƒê·ªìng H·∫°nh Ph√∫c", address: "45 ƒê∆∞·ªùng Tr·∫ßn H∆∞ng ƒê·∫°o, Qu·∫≠n 5, TP.HCM", specialty: "Nhi khoa" },
  { name: "Ph√≤ng kh√°m N·ªôi Ti·∫øt Minh T√¢m", address: "67 ƒê∆∞·ªùng Nguy·ªÖn VƒÉn Tr·ªói, Qu·∫≠n Ph√∫ Nhu·∫≠n, TP.HCM", specialty: "N·ªôi ti·∫øt" },
  { name: "Ph√≤ng kh√°m Tim M·∫°ch T√¢m An", address: "89 ƒê∆∞·ªùng Hai B√† Tr∆∞ng, Qu·∫≠n 3, TP.HCM", specialty: "Tim m·∫°ch" },
  { name: "Ph√≤ng kh√°m Da Li·ªÖu Ho√†n M·ªπ", address: "22 ƒê∆∞·ªùng V√µ Th·ªã S√°u, Qu·∫≠n 10, TP.HCM", specialty: "Da li·ªÖu" },
];

const Room = () => {
  const [clinics, setClinics] = useState(initialClinics);
  const [form, setForm] = useState({ name: "", address: "", specialty: "" });
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedIndex, setSelectedIndex] = useState(null);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  const handleSearch = (e) => {
    setSearchTerm(e.target.value.toLowerCase());
  };

  const handleAdd = () => {
    if (!form.name || !form.address || !form.specialty) return;
    setClinics([...clinics, form]);
    setForm({ name: "", address: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleEdit = () => {
    if (selectedIndex === null) return;
    const updated = [...clinics];
    updated[selectedIndex] = form;
    setClinics(updated);
    setForm({ name: "", address: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleDelete = () => {
    if (selectedIndex === null) return;
    setClinics(clinics.filter((_, idx) => idx !== selectedIndex));
    setForm({ name: "", address: "", specialty: "" });
    setSelectedIndex(null);
  };

  const handleSelect = (index) => {
    setForm(clinics[index]);
    setSelectedIndex(index);
  };

  const filteredClinics = clinics.filter((clinic) =>
    clinic.name.toLowerCase().includes(searchTerm)
  );

  return (
    <div className="page-container">
      <div className="clinic-container">
        <div className="clinic-left">
          <div className="search-container">
            <input
              type="text"
              placeholder="üîç T√¨m ki·∫øm ph√≤ng kh√°m..."
              value={searchTerm}
              onChange={handleSearch}
              className="search-input"
            />
          </div>

          <hr className="divider" />

          <div className="clinic-form">
            <h4>Th√¥ng tin ph√≤ng kh√°m</h4>
            <input
              type="text"
              name="name"
              placeholder="T√™n ph√≤ng kh√°m"
              value={form.name}
              onChange={handleChange}
            />
            <input
              type="text"
              name="address"
              placeholder="ƒê·ªãa ch·ªâ"
              value={form.address}
              onChange={handleChange}
            />
            <input
              type="text"
              name="specialty"
              placeholder="Chuy√™n khoa"
              value={form.specialty}
              onChange={handleChange}
            />

            <div className="button-group">
              <button onClick={handleAdd} disabled={selectedIndex !== null}>
                Th√™m
              </button>
              <button onClick={handleEdit} disabled={selectedIndex === null}>
                S·ª≠a
              </button>
              <button onClick={handleDelete} disabled={selectedIndex === null}>
                X√≥a
              </button>
            </div>
          </div>
        </div>

        <div className="clinic-list">
          <h4>Danh s√°ch ph√≤ng kh√°m</h4>
          {filteredClinics.map((clinic, index) => (
            <RoomListTag
              key={index}
              clinic={clinic}
              onSelect={() => handleSelect(index)}
              isSelected={selectedIndex === index}
            />
          ))}
        </div>
      </div>
      <Footer />
    </div>
  );
};

export default Room;