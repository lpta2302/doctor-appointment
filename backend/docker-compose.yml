services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      retries: 5
      start_period: 2s
    volumes:
      - ./resources/init_db.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres:/var/lib/postgresql/data
    networks:
      - app_net
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}  
    ports:
      - "5050:80" 
    depends_on:
      - postgres
    networks:
      - app_net
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - app_net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
    networks:
      - app_net
  
  config-server:
    build: ./config-server
    container_name: config-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 2s
      retries: 5
      start_period: 2s
    ports:
      - 8888:8888
    networks:
      - app_net
  discovery-server:
    build: ./discovery-server
    container_name: discovery-server
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
    depends_on:
      config-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 2s
      retries: 5
      start_period: 2s
    ports:
      - 8761:8761
    networks:
      - app_net
  doctor-service:
    build: ./doctor-service
    container_name: doctor-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/doctor_db
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - KAFKA_BOOTSTRAPSERVER=kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - 8070:8070
    networks:
      - app_net
  clinic-service:
    build: ./clinic-service
    container_name: clinic-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/clinic_db
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - APPLICATION_CONFIG_DOCTORSERVICE=http://doctor-service:8070
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
      kafka:
        condition: service_started
    ports:
      - 8071:8071
    networks:
      - app_net
  shift-service:
    build: ./shift-service
    container_name: shift-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/shift_db
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - APPLICATION_CONFIG_DOCTORSERVICE=http://doctor-service:8070
      - APPLICATION_CONFIG_CLINICSERVICE=http://clinic-service:8071
      - KAFKA_BOOTSTRAP_SERVER=kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8072:8072
    networks:
      - app_net
  appointment-service:
    build: ./appointment-service
    container_name: appointment-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/appointment_db
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
      - APPLICATION_CONFIG_DOCTORSERVICE=http://doctor-service:8070
      - APPLICATION_CONFIG_CLINICSERVICE=http://clinic-service:8071
      - APPLICATION_CONFIG_SHIFTSERVICE=http://shift-service:8072
    depends_on:
      postgres:
        condition: service_healthy
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8073:8073
    networks:
      - app_net
  gateway:
    build: ./gateway
    container_name: gateway
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka
    depends_on:
      config-server:
        condition: service_healthy
      discovery-server:
        condition: service_healthy
    ports:
      - 8222:8222
    networks:
      - app_net

volumes:
  postgres:

networks:
  app_net:
    name: app_net
    driver: bridge